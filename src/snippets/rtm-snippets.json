{
  "InstructionSnippets": {
    "Allocate Global Address": {
      "prefix": "ALLOCATE_GLOBAL_ADDRESS",
      "body": [
        "ALLOCATE_GLOBAL_ADDRESS",
        "\tAddress(\"$1\")",
        "\t\"${2:blueprint_name}\"",
        "\tAddressReservation(\"${3:address_reservation}\")",
        "\tNamedAddress(\"${4:address}\")",
        ";"
      ],
      "description": "Allocate a global address."
    },
    "Assert Worktop Contains": {
      "prefix": "ASSERT_WORKTOP_CONTAINS",
      "body": [
        "ASSERT_WORKTOP_CONTAINS",
        "\tAddress(\"$1\")",
        "Decimal(\"$2\")",
        ";"
      ],
      "description": "Verify the transaction worktop contains at least an amount of a resource."
    },
    "Assert Worktop Contains Any": {
      "prefix": "ASSERT_WORKTOP_CONTAINS_ANY",
      "body": ["ASSERT_WORKTOP_CONTAINS_ANY", "\tAddress(\"$1\")", ";"],
      "description": "Verifies the worktop contains any non-zero amount of a resource."
    },
    "Assert Worktop Contains by Ids": {
      "prefix": "ASSERT_WORKTOP_CONTAINS_NON_FUNGIBLES",
      "body": [
        "ASSERT_WORKTOP_CONTAINS_NON_FUNGIBLES",
        "\tAddress(\"$2\")",
        "\tArray<NonFungibleLocalId>(",
        "\t\tNonFungibleLocalId(\"${1:id}\"),",
        "\t)",
        ";"
      ],
      "description": "Asserts that the transaction worktop contains some resource."
    },
    "Burn Resource": {
      "prefix": "BURN_RESOURCE",
      "body": ["BURN_RESOURCE", "\tBucket(\"${1:bucket_name}\")", ";"],
      "description": "Burns a Bucket of a Resource."
    },
    "Call Function": {
      "prefix": "CALL_FUNCTION",
      "body": [
        "CALL_FUNCTION",
        "\tAddress(\"${1:package}\")",
        "\t\"${2:Blueprint_Name}\"",
        "\t\"${3:Function_Name}\"",
        "\t${4:Args}",
        ";"
      ],
      "description": "Calls a function on a blueprint."
    },
    "Call Method": {
      "prefix": "CALL_METHOD",
      "body": [
        "CALL_METHOD",
        "\tAddress(\"${1:component}\")",
        "\t\"${2:Method_Name}\"",
        "\t${3:Args}",
        ";"
      ],
      "description": "Calls a method on a component."
    },
    "Clone Proof": {
      "prefix": "CLONE_PROOF",
      "body": [
        "CLONE_PROOF",
        "\tProof(\"${1:original_proof_name}\")",
        "\tProof(\"${2:new_proof_name}\")",
        ";"
      ],
      "description": "Clones an existing proof."
    },
    "Create Proof from Auth Zone of All": {
      "prefix": "CREATE_PROOF_FROM_AUTH_ZONE_OF_ALL",
      "body": [
        "CREATE_PROOF_FROM_AUTH_ZONE_OF_ALL",
        "\tAddress(\"$1\")",
        "\tProof(\"${2:proof_name}\")",
        ";"
      ],
      "description": "Creates a proof of a full resource amount on the Auth Zone."
    },
    "Create Proof from Auth Zone of Amount": {
      "prefix": "CREATE_PROOF_FROM_AUTH_ZONE_OF_AMOUNT",
      "body": [
        "CREATE_PROOF_FROM_AUTH_ZONE_OF_AMOUNT",
        "\tAddress(\"$2\")",
        "\tDecimal(\"${1:amount}\")",
        "\tProof(\"${3:proof_name}\")",
        ";"
      ],
      "description": "Creates a proof of specified amount from the Auth Zone."
    },
    "Create Proof from Auth Zone of Non-fungibles": {
      "prefix": "CREATE_PROOF_FROM_AUTH_ZONE_OF_NON_FUNGIBLES",
      "body": [
        "CREATE_PROOF_FROM_AUTH_ZONE_OF_NON_FUNGIBLES",
        "\tAddress(\"$2\")",
        "\tArray<NonFungibleLocalId>(",
        "\t\tNonFungibleLocalId(\"${1:id}\"),",
        "\t)",
        "\tProof(\"${3:proof_name}\")",
        ";"
      ],
      "description": "Creates a non-fungible proof from on Auth Zone."
    },
    "Create Proof from Bucket of All": {
      "prefix": "CREATE_PROOF_FROM_BUCKET_OF_ALL",
      "body": [
        "CREATE_PROOF_FROM_BUCKET_OF_ALL",
        "\tBucket(\"${1:bucket_name}\")",
        "\tProof(\"${2:proof_name}\")",
        ";"
      ],
      "description": "Creates a proof of a full resource amount in a Bucket."
    },
    "Drop All Proofs": {
      "prefix": "DROP_ALL_PROOFS",
      "body": ["DROP_ALL_PROOFS", ";"],
      "description": "Drops all Proofs."
    },
    "Drop Auth Zone Proofs": {
      "prefix": "DROP_AUTH_ZONE_PROOFS",
      "body": ["DROP_AUTH_ZONE_PROOFS", ";"],
      "description": "Drops all Proofs in the Auth Zone."
    },
    "Drop All Named Proofs": {
      "prefix": "DROP_NAMED_PROOFS",
      "body": ["DROP_NAMED_PROOFS", ";"],
      "description": "Drops all named Proofs."
    },
    "Mint Fungible": {
      "prefix": "MINT_FUNGIBLE",
      "body": [
        "MINT_FUNGIBLE",
        "\tAddress(\"${1:resource}\")",
        "\tDecimal(\"${2:amount}\")",
        ";"
      ],
      "description": "Mints a fungible token."
    },
    "Mint Non Fungible with No Data": {
      "prefix": "MINT_NON_FUNGIBLE",
      "body": [
        "MINT_NON_FUNGIBLE",
        "\tAddress(\"${1:resource}\")",
        "\tMap<NonFungibleLocalId, Tuple>(",
        "\t\tNonFungibleLocalId(\"${2:id}\") => Tuple(Tuple()),",
        "\t)",
        ";"
      ],
      "description": "Mints a non-fungible that has no non-fungible data."
    },
    "Mint RUID Non Fungible with No Data": {
      "prefix": "MINT_RUID_NON_FUNGIBLE",
      "body": [
        "MINT_RUID_NON_FUNGIBLE",
        "\tAddress(\"${1:resource}\")",
        "\tArray<Tuple>(",
        "\t\tTuple(Tuple()),",
        "\t)",
        ";"
      ],
      "description": "Mints a non-fungible with a RUID local ID and no non-fungible data."
    },
    "Pop from Auth Zone": {
      "prefix": "POP_FROM_AUTH_ZONE",
      "body": ["POP_FROM_AUTH_ZONE", "\tProof(\"${1:proof_name}\")", ";"],
      "description": "Pops a proof from the Auth Zone."
    },
    "Push to Auth Zone": {
      "prefix": "PUSH_TO_AUTH_ZONE",
      "body": ["PUSH_TO_AUTH_ZONE", "\tProof(\"${1:proof_name}\")", ";"],
      "description": "Pushes a proof to the auth zone."
    },
    "Return to Worktop": {
      "prefix": "RETURN_TO_WORKTOP",
      "body": ["RETURN_TO_WORKTOP", "\tBucket(\"${1:bucket_name}\")", ";"],
      "description": "Returns a bucket to the transaction worktop."
    },
    "Take All From Worktop": {
      "prefix": "TAKE_ALL_FROM_WORKTOP",
      "body": [
        "TAKE_ALL_FROM_WORKTOP",
        "\tAddress(\"$1\")",
        "\tBucket(\"${2:bucket_name}\")",
        ";"
      ],
      "description": "Takes all or a resource from the worktop into a new bucket."
    },
    "Take From Worktop by Amount": {
      "prefix": "TAKE_FROM_WORKTOP",
      "body": [
        "TAKE_FROM_WORKTOP",
        "\tAddress(\"$1\")",
        "\tDecimal(\"${2:amount}\")",
        "\tBucket(\"${3:bucket_name}\")",
        ";"
      ],
      "description": "Takes an amount of a resource from the worktop and into a bucket."
    },
    "Take Non-fungibles from Worktop": {
      "prefix": "TAKE_NON_FUNGIBLES_FROM_WORKTOP",
      "body": [
        "TAKE_NON_FUNGIBLES_FROM_WORKTOP",
        "\tAddress(\"$1\")",
        "\tArray<NonFungibleLocalId>(",
        "\t\tNonFungibleLocalId(\"${2:id}\"),",
        "\t)",
        "\tBucket(\"${3:bucket_name}\")",
        ";"
      ],
      "description": "Takes resources from the worktop and into a bucket."
    }
  },

  "CommonOperations": {
    "Create Proof of Amount from Account": {
      "prefix": "CREATE_PROOF_OF_AMOUNT_FROM_ACCOUNT",
      "body": [
        "CALL_METHOD",
        "\tAddress(\"${1:account}\")",
        "\t\"create_proof_of_amount\"",
        "\tAddress(\"${2:resource}\")",
        "\tDecimal(\"${3:amount}\")",
        ";"
      ],
      "description": "Create a proof from an account."
    },
    "Create Proof of Non-fungibles from Account": {
      "prefix": "CREATE_PROOF_OF_NON_FUNGIBLES_FROM_ACCOUNT",
      "body": [
        "CALL_METHOD",
        "\tAddress(\"${1:account}\")",
        "\t\"create_proof_of_non_fungibles\"",
        "\tAddress(\"${2:resource}\")",
        "\tArray<NonFungibleLocalId>(",
        "\t\tNonFungibleLocalId(\"${3:id}\"),",
        "\t)",
        ";"
      ],
      "description": "Create a proof of non-fungibles from an account."
    },
    "Deposit to Account": {
      "prefix": "DEPOSIT_TO_ACCOUNT",
      "body": [
        "CALL_METHOD",
        "\tAddress(\"${1:account}\")",
        "\t\"deposit\"",
        "\tBucket(\"${2:bucket_name}\")",
        ";"
      ],
      "description": "Deposit funds into an account."
    },
    "Deposit Batch to Account": {
      "prefix": "DEPOSIT_BATCH_TO_ACCOUNT",
      "body": [
        "CALL_METHOD",
        "\tAddress(\"${1:account}\")",
        "\t\"deposit_batch\"",
        "\tArray<Bucket>(",
        "\t\tBucket(\"${2:bucket_name}\"),",
        "\t)",
        ";"
      ],
      "description": "Deposit a batch of funds into an account."
    },
    "Deposit Entire Worktop to Account": {
      "prefix": "DEPOSIT_ENTIRE_WORKTOP_TO_ACCOUNT",
      "body": [
        "CALL_METHOD",
        "\tAddress(\"${1:account}\")",
        "\t\"deposit_batch\"",
        "\tExpression(\"ENTIRE_WORKTOP\")",
        ";"
      ],
      "description": "Deposit the entire worktop into an account."
    },
    "Lock Fee": {
      "prefix": "LOCK_FEE",
      "body": [
        "CALL_METHOD",
        "\tAddress(\"${1:account}\")",
        "\t\"lock_fee\"",
        "\tDecimal(\"${2:amount}\")",
        ";"
      ],
      "description": "Lock a fee for the transaction."
    },
    "Withdraw from Account": {
      "prefix": "WITHDRAW_FROM_ACCOUNT",
      "body": [
        "CALL_METHOD",
        "\tAddress(\"${1:account}\")",
        "\t\"withdraw\"",
        "\tAddress(\"${2:resource}\")",
        "\tDecimal(\"${3:amount}\")",
        ";"
      ],
      "description": "Withdraw tokens from an account."
    },
    "Withdraw Non Fungibles from Account by Ids": {
      "prefix": "WITHDRAW_NON_FUNGIBLES_FROM_ACCOUNT",
      "body": [
        "CALL_METHOD",
        "\tAddress(\"${1:account}\")",
        "\t\"withdraw_non_fungibles\"",
        "\tAddress(\"${2:resource}\")",
        "\tArray<NonFungibleLocalId>(",
        "\t\tNonFungibleLocalId(\"${3:id}\"),",
        "\t)",
        ";"
      ],
      "description": "Withdraw non-fungible tokens from an account."
    }
  },

  "CommonTypes": {
    "Address Component": {
      "prefix": "Address Component",
      "body": "Address(\"${1:component}\")"
    },
    "Address Package": {
      "prefix": "Address Package",
      "body": "Address(\"${1:package}\")"
    },
    "Address Resource": {
      "prefix": "Address Resource",
      "body": "Address(\"${1:resource}\")"
    },
    "AddressReservation": {
      "prefix": "AddressReservation",
      "body": "AddressReservation(\"$1\")"
    },
    "Array": {
      "prefix": "Array",
      "body": "Array<${1|I8,I16,I32,I64,I128,U8,U16,U32,U64,U128,Decimal,PreciseDecimal,String,Enum,Option,Some,None,Ok,Err,Array,Tuple,Map,Address,Hash,Bucket,Proof,NonFungibleLocalId,NonFungibleGlobalId,Bytes|}>($2,)"
    },
    "Blob": {
      "prefix": "Blob",
      "body": "Blob(\"${1:blob_hash}\")"
    },
    "Bucket": {
      "prefix": "Bucket",
      "body": "Bucket(\"${1:bucket_name}\")"
    },
    "Bytes": {
      "prefix": "Bytes",
      "body": "Bytes(\"${1:bytes_hex}\")"
    },
    "Decimal": {
      "prefix": "Decimal",
      "body": "Decimal(\"${1:number}\")"
    },
    "Enum": {
      "prefix": "Enum",
      "body": "Enum(\"${1:variant_name}\", \"${2:optional_values}\")"
    },
    "Err": {
      "prefix": "Err",
      "body": "Err($1)"
    },
    "Expression": {
      "prefix": "Expression",
      "body": "Expression(\"${1|ENTIRE_WORKTOP,ENTIRE_AUTH_ZONE|}\")"
    },
    "Hash": {
      "prefix": "Hash",
      "body": "Hash(\"${1:hash_hex}\")"
    },
    "Map": {
      "prefix": "Map",
      "body": "Map<${1|I8,I16,I32,I64,I128,U8,U16,U32,U64,U128,Decimal,PreciseDecimal,String,Enum,Option,Some,None,Ok,Err,Array,Tuple,Map,Address,Hash,Bucket,Proof,NonFungibleLocalId,NonFungibleGlobalId,Bytes|, ${2|I8,I16,I32,I64,I128,U8,U16,U32,U64,U128,Decimal,PreciseDecimal,String,Enum,Option,Some,None,Ok,Err,Array,Tuple,Map,Address,Hash,Bucket,Proof,NonFungibleLocalId,NonFungibleGlobalId,Bytes|}>($3 => $4,)"
    },
    "None": {
      "prefix": "None",
      "body": "None"
    },
    "NonFungibleGlobalId": {
      "prefix": "NonFungibleGlobalId",
      "body": "NonFungibleGlobalId(\"${1:resource_address}:${2:local_id}\")"
    },
    "NonFungibleLocalId Bytes": {
      "prefix": "NonFungibleLocalId Bytes",
      "body": "NonFungibleLocalId(\"${1:id}]\")"
    },
    "NonFungibleLocalId Integer": {
      "prefix": "NonFungibleLocalId Integer",
      "body": "NonFungibleLocalId(\"#${1:id}#\")"
    },
    "NonFungibleLocalId RUID": {
      "prefix": "NonFungibleLocalId RUID",
      "body": "NonFungibleLocalId(\"{${1:id}}\")"
    },
    "NonFungibleLocalId String": {
      "prefix": "NonFungibleLocalId String",
      "body": "NonFungibleLocalId(\"<${1:id}>\")"
    },
    "Ok": {
      "prefix": "Ok",
      "body": "Ok($1)"
    },
    "Proof": {
      "prefix": "Proof",
      "body": "Proof(\"${1:proof_name}\")"
    },
    "PreciseDecimal": {
      "prefix": "PreciseDecimal",
      "body": "PreciseDecimal(\"${1:number}\")"
    },
    "Some": {
      "prefix": "Some",
      "body": "Some($1)"
    },
    "Tuple": {
      "prefix": "Tuple",
      "body": "Tuple($1,)"
    },
    "Unit": {
      "prefix": "Unit",
      "body": "()"
    }
  },

  "UsefulConstants": {
    "Faucet resim": {
      "prefix": "Faucet resim",
      "body": "component_sim1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxhkrefh"
    },
    "Faucet Stokenet": {
      "prefix": "Faucet Stokenet",
      "body": "component_tdx_2_1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxyulkzl"
    },
    "XRD Mainnet": {
      "prefix": "XRD Mainnet",
      "body": "resource_rdx1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxradxrd"
    },
    "XRD resim": {
      "prefix": "XRD resim",
      "body": "resource_sim1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxakj8n3"
    },
    "XRD Stokenet": {
      "prefix": "XRD Stokenet",
      "body": "resource_tdx_2_1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxtfd2jc"
    }
  }
}
